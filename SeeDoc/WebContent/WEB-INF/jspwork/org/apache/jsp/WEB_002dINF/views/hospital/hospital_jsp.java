/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-07-20 05:59:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.hospital;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import reviewBoard.model.vo.Review;
import hospital.model.vo.HospFile;
import hospital.model.vo.HospTime;
import hospital.model.vo.Hospital;
import hospital.model.vo.HospDoctor;
import java.util.List;
import member.model.service.MemberService;
import member.model.vo.User;
import hospital.model.vo.Hospital;

public final class hospital_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/views/common/header.jsp", Long.valueOf(1595158624000L));
    _jspx_dependants.put("/WEB-INF/views/common/footer.jsp", Long.valueOf(1595220082000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.service.MemberService");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("hospital.model.vo.HospFile");
    _jspx_imports_classes.add("hospital.model.vo.HospTime");
    _jspx_imports_classes.add("member.model.vo.User");
    _jspx_imports_classes.add("hospital.model.vo.Hospital");
    _jspx_imports_classes.add("hospital.model.vo.HospDoctor");
    _jspx_imports_classes.add("reviewBoard.model.vo.Review");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	User userLoggedIn = (User)session.getAttribute("userLoggedIn");
	Cookie[] cookies2 = request.getCookies();
	boolean saveUserIdChecked = false;
	String saveUserIdValue = "";
	if(cookies2 != null) {
		for(Cookie c : cookies2) {
			String k = c.getName();
			String v = c.getValue();

			if("saveUserId".equals(k)) {
				saveUserIdChecked = true;
				saveUserIdValue = v;
			}
		}
	}
	
	
	
	Hospital hospLoggedIn = (Hospital)session.getAttribute("hospLoggedIn");
	//쿠키관련
	Cookie[] cookies = request.getCookies();
	boolean saveHospIdChecked = false;
	String saveHospIdValue = "";
	if(cookies != null) {
		for(Cookie c : cookies) {
			String k = c.getName();
			String v = c.getValue();

			if("saveHospId".equals(k)) {
				saveHospIdChecked = true;
				saveHospIdValue = v;
			}
		}
	}

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>See Doctor</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/header.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/footer.css\" />\r\n");
      out.write("<script src=\"");
      out.print( request.getContextPath() );
      out.write("/js/jquery-3.5.1.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"top-bar\">\r\n");
      out.write("        <header>\r\n");
      out.write("            <div class=\"logo\">\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath() );
      out.write("\"><img src=\"");
      out.print(request.getContextPath() );
      out.write("/img/logo.png\" alt=\"\"></a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <nav>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("                <ul>\r\n");
      out.write("                ");
if(hospLoggedIn == null && userLoggedIn == null) { 
      out.write("\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath() );
      out.write("\">\r\n");
      out.write("                        <li style=\"color:white\">홈</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/member/login\">\r\n");
      out.write("                        <li>로그인</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/member/register\">\r\n");
      out.write("                        <li>회원가입</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    \r\n");
      out.write("                ");
 } else if(hospLoggedIn != null) { 
      out.write("\r\n");
      out.write("                \t<a href=\"");
      out.print(request.getContextPath());
      out.write("/hospital/hospital?hospId=");
      out.print( hospLoggedIn.getHospId() );
      out.write("\"><span class=\"login1\"><strong>");
      out.print( hospLoggedIn.getHospName() );
      out.write("</strong></span></a>\r\n");
      out.write("                \t<a href=\"");
      out.print(request.getContextPath());
      out.write("/hospital/logout\">\r\n");
      out.write("                \t\t<li>로그아웃</li>\r\n");
      out.write("                \t</a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/hospital/edit-info?hospId=");
      out.print( hospLoggedIn.getHospId() );
      out.write("\">\r\n");
      out.write("                        <li>병원정보수정</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/hospital/doctorList?hospId=");
      out.print( hospLoggedIn.getHospId() );
      out.write("\">\r\n");
      out.write("                        <li>의사보기</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <!-- 2/15 -->\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/booking/bookingHopitalList?hospId=");
      out.print( hospLoggedIn.getHospId() );
      out.write("\"> <!-- ts -->\r\n");
      out.write("                        <li>예약내역(병원)</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                 ");
}else if(userLoggedIn!=null&&userLoggedIn.getUserRole().equals(MemberService.MEMBER_ROLE_ADMIN)){ 
      out.write("   \r\n");
      out.write("                    <span class=\"login1\"><strong>");
      out.print( userLoggedIn.getUserName());
      out.write("</strong></span>\r\n");
      out.write("                \t<a href=\"");
      out.print(request.getContextPath());
      out.write("/member/logout\">\r\n");
      out.write("                \t\t<li>로그아웃</li>\r\n");
      out.write("                \t</a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/admin/memberList\">\r\n");
      out.write("                        <li>회원조회</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/admin/hospList\">\r\n");
      out.write("                        <li>병원조회</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    \r\n");
      out.write("                ");
 } else { 
      out.write("\r\n");
      out.write("                \t<span class=\"login1\"><strong>");
      out.print( userLoggedIn.getUserName());
      out.write("</strong></span>\r\n");
      out.write("                \t<a href=\"");
      out.print(request.getContextPath());
      out.write("/member/logout\">\r\n");
      out.write("                \t\t<li>로그아웃</li>\r\n");
      out.write("                \t</a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/member/edit-info?userId=");
      out.print( userLoggedIn.getUserId());
      out.write("\">\r\n");
      out.write("                        <li>회원정보수정</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <!-- 2/15 -->\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/booking/bookinglist?userId=");
      out.print( userLoggedIn.getUserId() );
      out.write("\"> <!-- ts -->\r\n");
      out.write("                        <li>예약내역</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("                </ul>\r\n");
      out.write("            </nav>\r\n");
      out.write("        </header>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"sub-bar\"></div>\r\n");
      out.write('\r');
      out.write('\n');

	List<Review> list = (List<Review>) request.getAttribute("list");
	List<HospDoctor> doctor = (List<HospDoctor>)request.getAttribute("doctor");
	Hospital hosp = (Hospital)request.getAttribute("hosp");
	HospTime time = (HospTime)request.getAttribute("time");
	List<HospFile> file = (List<HospFile>)request.getAttribute("file");
	HospFile logo = (HospFile)request.getAttribute("logo");
	List<HospFile> thumbnail = (List<HospFile>)request.getAttribute("thumbnail");

      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\t//score계산\r\n");
      out.write("\tvar totalScore = 0;\r\n");
      out.write("\tvar cntScore = 0;\r\n");
      out.write("\tvar cntScoreArr = [ 0, 0, 0, 0, 0 ];\r\n");
for (Review r : list) {
if(r.getReviewRef() ==0){
      out.write("\r\n");
      out.write("\ttotalScore +=");
      out.print(r.getReviewRank());
      out.write(";\r\n");
      out.write("\tswitch (");
      out.print(r.getReviewRank());
      out.write(") {\r\n");
      out.write("\tcase 1:\r\n");
      out.write("\t\tcntScoreArr[0]++;\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\tcase 2:\r\n");
      out.write("\t\tcntScoreArr[1]++;\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\tcase 3:\r\n");
      out.write("\t\tcntScoreArr[2]++;\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\tcase 4:\r\n");
      out.write("\t\tcntScoreArr[3]++;\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\tcase 5:\r\n");
      out.write("\t\tcntScoreArr[4]++;\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\t}\r\n");
      out.write("\tcntScore++;\r\n");
}}
      out.write("\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\t//총 별점 나타내기\r\n");
      out.write("\t\tlet valueArr = document.getElementsByClassName(\"value\");\r\n");
      out.write("\t\tlet score = document.getElementById(\"score\");\r\n");
      out.write("\r\n");
      out.write("\t\tscore.innerHTML = (totalScore / cntScore).toFixed(1) == \"NaN\" ? 0 : (totalScore / cntScore).toFixed(1);\r\n");
      out.write("\t\tvalueArr[0].style.width = (totalScore / cntScore) * 20 + \"%\";\r\n");
      out.write("\t\t//각 별점 나타내기\r\n");
      out.write("\t\tfor (var i = 1; i <= 5; i++) {\r\n");
      out.write("\t\t\tlet point = document.getElementById(\"point-\" + i);\r\n");
      out.write("\t\t\tpoint.value = (((cntScoreArr[i - 1]) / cntScore) * 100);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//대댓글\r\n");
      out.write("\t\t$(\".btn-reply\").click(function(){\r\n");
      out.write("\t\t\tlet $replyWrap = $(\"<div class='reply-wrap'></div>\");\r\n");
      out.write("\t\t\tlet $reply = $(\"<div class='reply' style='display:none; text-align:left;'></div>\");\r\n");
      out.write("\t\t\tlet $frm = $(\"<form action='");
      out.print(request.getContextPath() );
      out.write("/board/writeReview' method='POST'></form>\");\r\n");
      out.write("\t\t\tlet $boardCommentTr = $(this);\r\n");
      out.write("\t\t\t");
for (Review r : list) {
      out.write("\r\n");
      out.write("\t\t\tif(");
      out.print( r.getReviewNo() );
      out.write(" == $(this).val()){\r\n");
      out.write("\r\n");
      out.write("\t\t\t$frm.append(\"<input type='hidden' name='boardRef' value='");
      out.print( r.getReviewNo() );
      out.write("' />\");\r\n");
      out.write("\t\t\t$frm.append(\"<input type='hidden' name='boardCommentWriter' value='");
      out.print( hosp.getHospId());
      out.write("' />\");\r\n");
      out.write("\t\t\t$frm.append(\"<input type='hidden' name='hospId' value='");
      out.print( hosp.getHospId());
      out.write("' />\");\r\n");
      out.write("\t\t\t$frm.append(\"<input type='hidden' name='reviewLevel' value='2' />\");\r\n");
      out.write("\t\t\t$frm.append(\"<input type='hidden' name='bookingNo' value='");
      out.print( r.getBookingNo());
      out.write("' />\");\r\n");
      out.write("\t\t\t$frm.append(\"<input type='hidden' name='reviewRank' value='0' />\");\r\n");
      out.write("\t\t\t$frm.append(\"<input type='hidden' name='reviewRef' value='\"+$(this).val()+\"' />\");\r\n");
      out.write("\t\t\t$frm.append(\"<textarea name='reviewCon' cols=60 rows=3></textarea>\");\r\n");
      out.write("\t\t\t$frm.append(\"<button type='submit' class='btn-reply' style='display:block;'>등록</button>\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$reply.append($frm);\r\n");
      out.write("\t\t\t$replyWrap.append($reply);\r\n");
      out.write("\t\t\t$replyWrap.insertAfter($boardCommentTr)\r\n");
      out.write("\t\t\t   .children($reply).slideDown(800)\r\n");
      out.write("\t\t\t   .children(\"form\").submit(function(){\r\n");
      out.write("\t\t\t\t   let $textarea = $(this).find(\"textarea\");\r\n");
      out.write("\t\t\t\t   if($textarea.val().length == 0){\r\n");
      out.write("\t\t\t\t\t   return false;\r\n");
      out.write("\t\t\t\t   }\r\n");
      out.write("\t\t\t   })\t\r\n");
      out.write("\t\t\t   .children(\"textarea\").focus();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t//1회만 작동하도록함.\r\n");
      out.write("\t\t$(this).off(\"click\");\r\n");
      out.write("\t});\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"");
      out.print(request.getContextPath());
      out.write("/css/hospital.css\">\r\n");
      out.write("<section class=\"slide-wrap\">\r\n");
      out.write("\t<div class=\"slider\">\r\n");
      out.write("\t\t<div class=\"slide_viewer\">\r\n");
      out.write("\t\t\t<div class=\"slide_group\">\r\n");
      out.write("\t\t\t\t");
 for(HospFile t : thumbnail){ 
      out.write("\r\n");
      out.write("\t\t\t\t");
 if(t.getBoardOriginalFileName() == null){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div style=\"background: url('../img/hospMain-base.jpg');background-size: cover;\" class=\"slide\"></div>\r\n");
      out.write("\t\t\t\t\t");
 } else {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div style=\"background: url('../upload/hospital/");
      out.print( t.getBoardRenamedFileName() );
      out.write("');background-size: cover;\" class=\"slide\"></div>\r\n");
      out.write("\t\t\t\t\t");
 }
      out.write("\r\n");
      out.write("\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- End // .slider -->\r\n");
      out.write("\t<div class=\"back-opa\"></div>\r\n");
      out.write("\t<div class=\"slide_buttons\"></div>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"directional_nav\">\r\n");
      out.write("\t\t<div class=\"previous_btn\" title=\"Previous\">\r\n");
      out.write("\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n");
      out.write("\t\t\t\txmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"43px\"\r\n");
      out.write("\t\t\t\theight=\"81px\">\r\n");
      out.write("                    <defs>\r\n");
      out.write("                        <filter id=\"Filter_0\">\r\n");
      out.write("                            <feFlood flood-color=\"rgb(255, 255, 255)\"\r\n");
      out.write("\t\t\t\t\tflood-opacity=\"1\" result=\"floodOut\" />\r\n");
      out.write("                            <feComposite operator=\"atop\" in=\"floodOut\"\r\n");
      out.write("\t\t\t\t\tin2=\"SourceGraphic\" result=\"compOut\" />\r\n");
      out.write("                            <feBlend mode=\"normal\" in=\"compOut\"\r\n");
      out.write("\t\t\t\t\tin2=\"SourceGraphic\" />\r\n");
      out.write("                        </filter>\r\n");
      out.write("\r\n");
      out.write("                    </defs>\r\n");
      out.write("                    <g filter=\"url(#Filter_0)\">\r\n");
      out.write("                        <path fill-rule=\"evenodd\" fill=\"rgb(55, 59, 68)\"\r\n");
      out.write("\t\t\t\t\td=\"M38.973,7.729 L7.773,38.929 C7.144,39.558 6.504,40.108 5.874,40.594 C6.504,41.079 7.144,41.629 7.772,42.257 L38.973,73.457 C41.844,76.329 43.353,79.477 42.342,80.487 C41.332,81.498 38.185,79.989 35.313,77.118 L4.113,45.917 C2.993,44.798 2.084,43.638 1.448,42.577 C1.165,42.545 0.914,42.471 0.743,42.300 C0.395,41.952 0.352,41.348 0.553,40.593 C0.352,39.839 0.395,39.235 0.743,38.887 C0.914,38.716 1.165,38.642 1.448,38.610 C2.084,37.550 2.993,36.390 4.113,35.270 L35.313,4.070 C38.184,1.198 41.332,-0.311 42.343,0.700 C43.353,1.710 41.845,4.858 38.973,7.729 Z\" />\r\n");
      out.write("                    </g>\r\n");
      out.write("                </svg>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"next_btn\" title=\"Next\">\r\n");
      out.write("\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\"\r\n");
      out.write("\t\t\t\txmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"43px\"\r\n");
      out.write("\t\t\t\theight=\"81px\">\r\n");
      out.write("                    <defs>\r\n");
      out.write("                        <filter id=\"Filter_0\">\r\n");
      out.write("                            <feFlood flood-color=\"rgb(255, 255, 255)\"\r\n");
      out.write("\t\t\t\t\tflood-opacity=\"1\" result=\"floodOut\" />\r\n");
      out.write("                            <feComposite operator=\"atop\" in=\"floodOut\"\r\n");
      out.write("\t\t\t\t\tin2=\"SourceGraphic\" result=\"compOut\" />\r\n");
      out.write("                            <feBlend mode=\"normal\" in=\"compOut\"\r\n");
      out.write("\t\t\t\t\tin2=\"SourceGraphic\" />\r\n");
      out.write("                        </filter>\r\n");
      out.write("\r\n");
      out.write("                    </defs>\r\n");
      out.write("                    <g filter=\"url(#Filter_0)\">\r\n");
      out.write("                        <path fill-rule=\"evenodd\" fill=\"rgb(55, 59, 68)\"\r\n");
      out.write("\t\t\t\t\td=\"M42.541,40.594 C42.742,41.348 42.698,41.952 42.351,42.300 C42.179,42.471 41.928,42.545 41.646,42.577 C41.009,43.637 40.101,44.797 38.981,45.917 L7.781,77.117 C4.909,79.989 1.762,81.498 0.751,80.487 C-0.260,79.476 1.249,76.329 4.121,73.457 L35.321,42.257 C35.950,41.628 36.590,41.079 37.219,40.593 C36.590,40.107 35.950,39.558 35.321,38.930 L4.121,7.730 C1.249,4.858 -0.259,1.710 0.751,0.699 C1.762,-0.311 4.909,1.197 7.781,4.069 L38.981,35.269 C40.101,36.389 41.009,37.549 41.646,38.610 C41.929,38.642 42.179,38.716 42.351,38.887 C42.698,39.235 42.742,39.839 42.541,40.594 Z\" />\r\n");
      out.write("                    </g>\r\n");
      out.write("                </svg>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"main-wrap\">\r\n");
      out.write("\t\t\t<div class=\"main-box\">\r\n");
      out.write("\t\t\t\t<div class=\"hos-title\">\r\n");
      out.write("\t\t\t");
 if(logo.getBoardOriginalFileName()==logo.getBoardRenamedFileName()){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t<p style=\"font-size: 39px; margin-top: 100px; font-weight: 800; color: white;\">");
      out.print(hosp.getHospName() );
      out.write("</p>\r\n");
      out.write("\t\t\t");
 } else {
      out.write("\r\n");
      out.write("\t\t\t\t\t<img src=\"");
      out.print(request.getContextPath());
      out.write("/upload/hospital/");
      out.print( logo.getBoardRenamedFileName() );
      out.write("\" alt=\"\">\r\n");
      out.write("\t\t\t");
 }
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t");
 if(userLoggedIn != null) {
      out.write("\r\n");
      out.write("\t\t\t\t<a href=\"");
      out.print( request.getContextPath() );
      out.write("/booking/bookingfrm?hospId=");
      out.print( hosp.getHospId() );
      out.write("&userId=");
      out.print( userLoggedIn.getUserId() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t<div class=\"res-btn btn\">병원 예약하기</div>\r\n");
      out.write("\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- End // .directional_nav -->\r\n");
      out.write("</section>\r\n");
      out.write("<section class=\"hosinfo-wrap\">\r\n");
      out.write("\t<p class=\"title\">\r\n");
      out.write("\t\t<span>●</span> 병원소개\r\n");
      out.write("\t</p>\r\n");
      out.write("\t<div class=\"hos-main\">\r\n");
      out.write("\t\t<div class=\"hos-logo\">\r\n");
      out.write("\t\t\t");
 if(logo.getBoardOriginalFileName()==logo.getBoardRenamedFileName()){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t<p style=\"font-size: 39px; margin-top: 100px; font-weight: 800; color: #4286f4;\">");
      out.print(hosp.getHospName() );
      out.write("</p>\r\n");
      out.write("\t\t\t");
 } else {
      out.write("\r\n");
      out.write("\t\t\t\t\t<img src=\"");
      out.print(request.getContextPath());
      out.write("/upload/hospital/");
      out.print( logo.getBoardRenamedFileName() );
      out.write("\" alt=\"\">\r\n");
      out.write("\t\t\t");
 }
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"hos-info\">\r\n");
      out.write("\t\t\t<h2>");
      out.print(hosp.getHospName() );
      out.write("</h2>\r\n");
      out.write("\t\t\t<br> <img src=\"");
      out.print(request.getContextPath());
      out.write("/img/address.png\"\r\n");
      out.write("\t\t\t\talt=\"\">\r\n");
      out.write("\t\t\t<p>");
      out.print(hosp.getHospAddr() );
      out.write("</p>\r\n");
      out.write("\t\t\t<br> <img src=\"");
      out.print(request.getContextPath());
      out.write("/img/call.png\"\r\n");
      out.write("\t\t\t\talt=\"\">\r\n");
      out.write("\t\t\t<p>");
      out.print(hosp.getHospTel() );
      out.write("</p>\r\n");
      out.write("\t\t\t<br> <img src=\"");
      out.print(request.getContextPath());
      out.write("/img/docicon.png\"\r\n");
      out.write("\t\t\t\talt=\"\">\r\n");
      out.write("\t\t\t<p>\r\n");
      out.write("\t\t\t\t");
      out.print(hosp.getHospInfo() );
      out.write("\r\n");
      out.write("\t\t\t\t<br> <br />\r\n");
      out.write("\t\t\t\t[영업시간] \r\n");
      out.write("\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t월 : ");
      out.print( time.getMonOpen() == null ? "휴무": time.getMonOpen() + " ~ " +time.getMonEnd() );
      out.write("&nbsp;\r\n");
      out.write("\t\t\t\t화 : ");
      out.print( time.getTueOpen() == null ? "휴무": time.getTueOpen() + " ~ " +time.getTueEnd() );
      out.write("&nbsp;\r\n");
      out.write("\t\t\t\t수 : ");
      out.print( time.getWedOpen() == null ? "휴무": time.getWedOpen() + " ~ " +time.getWedEnd() );
      out.write("\r\n");
      out.write("\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t목 : ");
      out.print( time.getThuOpen() == null ? "휴무": time.getThuOpen() + " ~ " +time.getThuEnd() );
      out.write("&nbsp;\r\n");
      out.write("\t\t\t\t금 : ");
      out.print( time.getFriOpen() == null ? "휴무": time.getFriOpen() + " ~ " +time.getFriEnd() );
      out.write("&nbsp;\r\n");
      out.write("\t\t\t\t토 : ");
      out.print( time.getSatOpen() == null ? "휴무": time.getSatOpen() + " ~ " +time.getSatEnd() );
      out.write("\r\n");
      out.write("\t\t\t\t<br />\r\n");
      out.write("\t\t\t\t일 : ");
      out.print( time.getSunOpen() == null ? "휴무": time.getSunOpen()+ " ~ " +time.getSunEnd());
      out.write("&nbsp;\r\n");
      out.write("\t\t\t\t <br>\r\n");
      out.write("\t\t\t\t점심시간 : ");
      out.print( time.getLunOpen() == null ? "점심시간 없음": time.getLunOpen()+ " ~ " +time.getLunEnd());
      out.write("\r\n");
      out.write("\t\t\t\t<br> <br> \r\n");
      out.write("\t\t\t\t편의시설 :\t");
      out.print(hosp.getHospConv() );
      out.write("\r\n");
      out.write("\t\t\t</p>\r\n");
      out.write("\t\t\t<div class=\"btn-wrap\">\r\n");
      out.write("\t\t\t\t<a href=\"#\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"\" onclick=\"window.open(url_combine_naver, '', 'scrollbars=no, width=600, height=600'); return false;\">\r\n");
      out.write("\t\t\t\t\t<div class=\"hos-infobtn btn\" style=\"background-color:white;color:black;text-align:left;\">\r\n");
      out.write("\t\t\t\t\t\t공유하기\r\n");
      out.write("\t\t\t\t\t\t\t<img src=\"https://www.naver.com/favicon.ico\" class=\"sharebtn_custom\" style=\"width: 32px; height:32px; margin:9px 14px 9px;\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</section>\r\n");
      out.write("<script async>\r\n");
      out.write("var url_this_page = \"http://localhost:9907/SeeDoc/hospital/hospital?hospId=hospital1\"; \r\n");
      out.write("var title_this_page = document.title;\r\n");
      out.write("\r\n");
      out.write("var url_default_naver = \"http://share.naver.com/web/shareView.nhn?url=\"; \r\n");
      out.write("var title_default_naver = \"&title=\";\r\n");
      out.write("var url_combine_naver = url_default_naver + encodeURI(url_this_page) + title_default_naver + encodeURI(title_this_page);\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<section class=\"docinfo-wrap\">\r\n");
      out.write("\t<div id=\"docinfo-box\" class=\"docinfo-box\">\r\n");
      out.write("\t\t<p class=\"title\">\r\n");
      out.write("\t\t\t<span>●</span> 의료진 소개\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t\t<form action=\"\" id=\"doctorSetRows\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"doctorRowPerPage\" value=\"4\">\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t");
 for(HospDoctor d : doctor){ 
				
      out.write("\r\n");
      out.write("\t\t<div class=\"doc-card\">\r\n");
      out.write("\t\t\t\t");
 if(!file.isEmpty()) { 
                		for(HospFile f : file) {
 		            		if(f.getDoctorNo() != null) {
                				if((f.getDoctorNo()).equals(d.getDoctorNo())) { 
                					if(f.getBoardOriginalFileName() != null) { 
                				
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<img alt=\"의사이미지\" src=\"");
      out.print(request.getContextPath() );
      out.write("/upload/hospital/");
      out.print(f.getBoardRenamedFileName() );
      out.write("\">\r\n");
      out.write("                \t\t\t\t\t");
}else { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<img alt=\"의사이미지\" src=\"");
      out.print(request.getContextPath() );
      out.write("/img/doctor.png\">\r\n");
      out.write("                \t");
				}
				 				}	
							} else {
      out.write("\r\n");
      out.write("\t\t\t\t\t                ");
      out.write("\r\n");
      out.write("\t\t\t\t\t");
 		}
 		            	}
                	} else {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<img alt=\"의사이미지\" src=\"");
      out.print(request.getContextPath() );
      out.write("/img/doctor.png\">\r\n");
      out.write("                \t");
 } 
      out.write("\r\n");
      out.write("\t\t\t<div class=\"doc-info\">\r\n");
      out.write("\t\t\t\t<h3>");
      out.print(hosp.getHospName() );
      out.write("</h3>\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<h2>\r\n");
      out.write("\t\t\t\t\t");
      out.print( d.getDoctorName() );
      out.write(" 교수<span>[");
      out.print( d.getHospDept() );
      out.write("]</span>\r\n");
      out.write("\t\t\t\t</h2>\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<p>[진료분야]</p>\r\n");
      out.write("\t\t\t\t<p>\r\n");
      out.write("\t\t\t\t\t");
      out.print( d.getDoctorTreat() );
      out.write("\r\n");
      out.write("\t\t\t\t</p>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");
 } 
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("</section>\r\n");
      out.write("\t<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/doctorPaging.js\"></script>\r\n");
      out.write("<section class=\"eval-wrap\">\r\n");
      out.write("\t<div class=\"eval-star\">\r\n");
      out.write("\t\t<h3>고객만족도</h3>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<span class=\"bg\"> <em class=\"value\"></em>\r\n");
      out.write("\t\t</span>\r\n");
      out.write("\t\t<p class=\"star-point\">\r\n");
      out.write("\t\t\t평점 : <span id=\"score\"></span> / 5.0\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t\t<div class=\"bar-wrap\">\r\n");
      out.write("\t\t\t<progress id=\"point-5\" max=\"100\" value=\"0\"></progress>\r\n");
      out.write("\t\t\t<label for=\"point-5\">5점</label>\r\n");
      out.write("\t\t\t<progress id=\"point-4\" max=\"100\" value=\"0\"></progress>\r\n");
      out.write("\t\t\t<label for=\"point-4\">4점</label>\r\n");
      out.write("\t\t\t<progress id=\"point-3\" max=\"100\" value=\"0\"></progress>\r\n");
      out.write("\t\t\t<label for=\"point-3\">3점</label>\r\n");
      out.write("\t\t\t<progress id=\"point-2\" max=\"100\" value=\"0\"></progress>\r\n");
      out.write("\t\t\t<label for=\"point-2\">2점</label>\r\n");
      out.write("\t\t\t<progress id=\"point-1\" max=\"100\" value=\"0\"></progress>\r\n");
      out.write("\t\t\t<label for=\"point-1\">1점</label>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"eval-bbc\">\r\n");
      out.write("\t\t<div id=\"products\">\r\n");
      out.write("\t\t\t<form action=\"\" id=\"setRows\">\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"rowPerPage\" value=\"3\">\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t\t");

				if (list == null || list.isEmpty()) {
			
      out.write("\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t<p>조회된 행이 없습니다.</p>\r\n");
      out.write("\t\t\t");

				} else {

					for (Review r : list) {
						if(r.getReviewRef()==0){
			
      out.write("\r\n");
      out.write("\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"eval-contents\">\r\n");
      out.write("\t\t\t\t<img class=\"person-img\" src=\"");
      out.print(request.getContextPath());
      out.write("/img/emoji");
      out.print(r.getReviewRank());
      out.write(".png\" alt=\"\" />\r\n");
      out.write("\t\t\t\t<h3>\r\n");
      out.write("\t\t\t\t\t");

						String[] idArr = r.getUserId().split("");
								String secretId = "";
								for (int i = 0; i < idArr.length; i++) {
									if (i % 2 == 0) {
										idArr[i] = "*";
									}
									secretId += idArr[i];
								}
					
      out.write("\r\n");
      out.write("\t\t\t\t\t");
      out.print(secretId);
      out.write("\r\n");
      out.write("\t\t\t\t</h3>\r\n");
      out.write("\t\t\t\t<img src=\"");
      out.print(request.getContextPath());
      out.write("/img/star");
      out.print(r.getReviewRank());
      out.write(".png\"\talt=\"\">\r\n");
      out.write("\t\t\t\t<p>");
      out.print(r.getReviewCon());
      out.write("</p>\r\n");
      out.write("\t\t\t\t");
 boolean hasComment = true;
					for(Review r1 : list){ 
					if(r.getReviewNo()==r1.getReviewRef()){ hasComment = false;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t");
}} if(hasComment && hospLoggedIn != null){
						if(hospLoggedIn.getHospId().equals(hosp.getHospId())){
      out.write("\r\n");
      out.write("\t\t\t\t<button class=\"btn-reply\" value=\"");
      out.print( r.getReviewNo() );
      out.write("\">리뷰답글</button>\r\n");
      out.write("\t\t\t\t");
}} for(Review r1 : list){
				if(r.getReviewNo()==r1.getReviewRef()){ 
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"review-reply\">\r\n");
      out.write("\t\t\t\t\t<img src=\"");
      out.print(request.getContextPath());
      out.write("/upload/hospital/");
      out.print(logo.getBoardRenamedFileName() );
      out.write("\" alt=\"\">\r\n");
      out.write("\t\t\t\t\t<h3>");
      out.print( hosp.getHospId() );
      out.write("</h3>\r\n");
      out.write("\t\t\t\t\t<p>");
      out.print( r1.getReviewCon() );
      out.write("</p>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t");
 if(hospLoggedIn != null){
					if(hospLoggedIn.getHospId().equals(hosp.getHospId())){ 
      out.write("\r\n");
      out.write("\t\t\t<form action='");
      out.print(request.getContextPath() );
      out.write("/board/deleteReview' method='POST'>\r\n");
      out.write("\t\t\t\t<button class=\"btn-delete\" value=\"");
      out.print( r1.getReviewNo() );
      out.write("\">삭제</button>\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"reviewNo\" value=\"");
      out.print( r1.getReviewNo() );
      out.write("\"/>\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"hospId\" value=\"");
      out.print( r.getHospId() );
      out.write("\"/>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t\t");
}}}}
				
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t");
}
				}
				}
			
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/paging.js\"></script>\r\n");
      out.write("\t</div>\r\n");
      out.write("</section>\r\n");
      out.write("<section class=\"loc-wrap\">\r\n");
      out.write("\t<p class=\"title\">\r\n");
      out.write("\t\t<span>●</span> 위치정보\r\n");
      out.write("\t</p>\r\n");
      out.write("\t<div id=\"map\" style=\"width:100%;height:350px;\"></div>\r\n");
      out.write("\t<h2>");
      out.print(hosp.getHospName() );
      out.write("</h2>\r\n");
      out.write("\t<p>");
      out.print(hosp.getHospAddr() );
      out.write("</p>\r\n");
      out.write("\t<a href=\"tel\">");
      out.print(hosp.getHospTel() );
      out.write("</a>\r\n");
      out.write("</section>\r\n");
      out.write("<script type=\"text/javascript\" src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=fb0204adc292a3c2b98ea0c6ea7fb60c&libraries=services\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("var mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n");
      out.write("    mapOption = {\r\n");
      out.write("        center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\r\n");
      out.write("        level: 5 // 지도의 확대 레벨\r\n");
      out.write("    };  \r\n");
      out.write("\r\n");
      out.write("// 지도를 생성합니다    \r\n");
      out.write("var map = new kakao.maps.Map(mapContainer, mapOption); \r\n");
      out.write("\r\n");
      out.write("// 주소-좌표 변환 객체를 생성합니다\r\n");
      out.write("var geocoder = new kakao.maps.services.Geocoder();\r\n");
      out.write("\r\n");
      out.write("// 주소로 좌표를 검색합니다\r\n");
      out.write("geocoder.addressSearch(\"");
      out.print(hosp.getHospAddr() );
      out.write("\", function(result, status) {\r\n");
      out.write("\r\n");
      out.write("    // 정상적으로 검색이 완료됐으면 \r\n");
      out.write("     if (status === kakao.maps.services.Status.OK) {\r\n");
      out.write("\r\n");
      out.write("        var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n");
      out.write("\r\n");
      out.write("        // 결과값으로 받은 위치를 마커로 표시합니다\r\n");
      out.write("        var marker = new kakao.maps.Marker({\r\n");
      out.write("            map: map,\r\n");
      out.write("            position: coords\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // 인포윈도우로 장소에 대한 설명을 표시합니다\r\n");
      out.write("        var infowindow = new kakao.maps.InfoWindow({\r\n");
      out.write("            content: '<div style=\"width:150px;text-align:center;padding:6px 0;\">");
      out.print(hosp.getHospName());
      out.write("</div>'\r\n");
      out.write("        });\r\n");
      out.write("        infowindow.open(map, marker);\r\n");
      out.write("\r\n");
      out.write("        // 지도의 중심을 결과값으로 받은 위치로 이동시킵니다\r\n");
      out.write("        map.setCenter(coords);\r\n");
      out.write("    } \r\n");
      out.write("});    \r\n");
      out.write("</script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/slide.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\t<footer>\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li>\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/docs/policy\">이용약관</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li>\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/docs/privacy\">개인정보처리방침</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li>\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/docs/biz\">사업자정보확인</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li>\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/bbc/cs\">고객센터</a>\r\n");
      out.write("            </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("        <p>\r\n");
      out.write("            상호 : (주)씨닥 | 대표 : 씨닥 | 개인정보관리책임자 : KH | 전화 : 2588-2588 | 이메일 : khm0627@naver.com\r\n");
      out.write("            <Br />주소 : 서울특별시 강남구 역삼동 | 사업자등록번호 : 110-426-375674 | 통신판매 : 제 2020-서울강남-0922호 | 호스팅제공자 : (주)씨닥\r\n");
      out.write("            <br><br>\r\n");
      out.write("            Copyrighter ⓒ 2020 SeeDoc KH-m\r\n");
      out.write("        </p>\r\n");
      out.write("    </footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
