/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-07-20 07:09:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.hospital;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import hospital.model.vo.HospFile;
import hospital.model.vo.HospDoctor;
import java.util.List;
import member.model.service.MemberService;
import member.model.vo.User;
import hospital.model.vo.Hospital;

public final class edit_002ddoc_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/views/common/header.jsp", Long.valueOf(1595158624000L));
    _jspx_dependants.put("/WEB-INF/views/common/footer.jsp", Long.valueOf(1595220082000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.service.MemberService");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("hospital.model.vo.HospFile");
    _jspx_imports_classes.add("member.model.vo.User");
    _jspx_imports_classes.add("hospital.model.vo.Hospital");
    _jspx_imports_classes.add("hospital.model.vo.HospDoctor");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	User userLoggedIn = (User)session.getAttribute("userLoggedIn");
	Cookie[] cookies2 = request.getCookies();
	boolean saveUserIdChecked = false;
	String saveUserIdValue = "";
	if(cookies2 != null) {
		for(Cookie c : cookies2) {
			String k = c.getName();
			String v = c.getValue();

			if("saveUserId".equals(k)) {
				saveUserIdChecked = true;
				saveUserIdValue = v;
			}
		}
	}
	
	
	
	Hospital hospLoggedIn = (Hospital)session.getAttribute("hospLoggedIn");
	//쿠키관련
	Cookie[] cookies = request.getCookies();
	boolean saveHospIdChecked = false;
	String saveHospIdValue = "";
	if(cookies != null) {
		for(Cookie c : cookies) {
			String k = c.getName();
			String v = c.getValue();

			if("saveHospId".equals(k)) {
				saveHospIdChecked = true;
				saveHospIdValue = v;
			}
		}
	}

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>See Doctor</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/header.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/footer.css\" />\r\n");
      out.write("<script src=\"");
      out.print( request.getContextPath() );
      out.write("/js/jquery-3.5.1.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"top-bar\">\r\n");
      out.write("        <header>\r\n");
      out.write("            <div class=\"logo\">\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath() );
      out.write("\"><img src=\"");
      out.print(request.getContextPath() );
      out.write("/img/logo.png\" alt=\"\"></a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <nav>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("                <ul>\r\n");
      out.write("                ");
if(hospLoggedIn == null && userLoggedIn == null) { 
      out.write("\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath() );
      out.write("\">\r\n");
      out.write("                        <li style=\"color:white\">홈</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/member/login\">\r\n");
      out.write("                        <li>로그인</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/member/register\">\r\n");
      out.write("                        <li>회원가입</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    \r\n");
      out.write("                ");
 } else if(hospLoggedIn != null) { 
      out.write("\r\n");
      out.write("                \t<a href=\"");
      out.print(request.getContextPath());
      out.write("/hospital/hospital?hospId=");
      out.print( hospLoggedIn.getHospId() );
      out.write("\"><span class=\"login1\"><strong>");
      out.print( hospLoggedIn.getHospName() );
      out.write("</strong></span></a>\r\n");
      out.write("                \t<a href=\"");
      out.print(request.getContextPath());
      out.write("/hospital/logout\">\r\n");
      out.write("                \t\t<li>로그아웃</li>\r\n");
      out.write("                \t</a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/hospital/edit-info?hospId=");
      out.print( hospLoggedIn.getHospId() );
      out.write("\">\r\n");
      out.write("                        <li>병원정보수정</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/hospital/doctorList?hospId=");
      out.print( hospLoggedIn.getHospId() );
      out.write("\">\r\n");
      out.write("                        <li>의사보기</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <!-- 2/15 -->\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/booking/bookingHopitalList?hospId=");
      out.print( hospLoggedIn.getHospId() );
      out.write("\"> <!-- ts -->\r\n");
      out.write("                        <li>예약내역(병원)</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                 ");
}else if(userLoggedIn!=null&&userLoggedIn.getUserRole().equals(MemberService.MEMBER_ROLE_ADMIN)){ 
      out.write("   \r\n");
      out.write("                    <span class=\"login1\"><strong>");
      out.print( userLoggedIn.getUserName());
      out.write("</strong></span>\r\n");
      out.write("                \t<a href=\"");
      out.print(request.getContextPath());
      out.write("/member/logout\">\r\n");
      out.write("                \t\t<li>로그아웃</li>\r\n");
      out.write("                \t</a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/admin/memberList\">\r\n");
      out.write("                        <li>회원조회</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/admin/hospList\">\r\n");
      out.write("                        <li>병원조회</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    \r\n");
      out.write("                ");
 } else { 
      out.write("\r\n");
      out.write("                \t<span class=\"login1\"><strong>");
      out.print( userLoggedIn.getUserName());
      out.write("</strong></span>\r\n");
      out.write("                \t<a href=\"");
      out.print(request.getContextPath());
      out.write("/member/logout\">\r\n");
      out.write("                \t\t<li>로그아웃</li>\r\n");
      out.write("                \t</a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/member/edit-info?userId=");
      out.print( userLoggedIn.getUserId());
      out.write("\">\r\n");
      out.write("                        <li>회원정보수정</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <!-- 2/15 -->\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/booking/bookinglist?userId=");
      out.print( userLoggedIn.getUserId() );
      out.write("\"> <!-- ts -->\r\n");
      out.write("                        <li>예약내역</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("                </ul>\r\n");
      out.write("            </nav>\r\n");
      out.write("        </header>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"sub-bar\"></div>\r\n");
      out.write('\r');
      out.write('\n');

	Hospital h = (Hospital)request.getAttribute("h");
	List<HospDoctor> list = (List<HospDoctor>)request.getAttribute("list");
	List<HospFile> hfList = (List<HospFile>)request.getAttribute("hospFileList");
	//System.out.println(hfList);
	String pageBar = (String)request.getAttribute("pageBar");
	HospDoctor editHd = (HospDoctor)request.getAttribute("hd"); //수정할 의사정보

      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/docList-view.css\">\r\n");
      out.write("<section>\r\n");
      out.write("        <div class=\"bk-logo-wrap\">\r\n");
      out.write("            <div class=\"hos-logo\">\r\n");
      out.write("\t\t        ");
 for(HospFile hf: hfList) { 
      out.write("\r\n");
      out.write("\t        \t\t");
 if("logo".equals(hf.getUse()) && hf.getBoardOriginalFileName()!=null){ 
      out.write("\r\n");
      out.write("\t        \t\t\t<img src=\"");
      out.print(request.getContextPath() );
      out.write("/upload/hospital/");
      out.print(hf.getBoardRenamedFileName() );
      out.write("\" alt=\"\">\r\n");
      out.write("\t\t        \t");
 } else if("logo".equals(hf.getUse()) && hf.getBoardOriginalFileName()==null){ 
      out.write("\r\n");
      out.write("\t\t        \t\t<p style=\"font-size: 39px; margin-top: 100px; font-weight: 800; color: white;position: relative; z-index: 1;\">");
      out.print(h.getHospName() );
      out.write("</p>\r\n");
      out.write("\t        \t\t");
 } 
      out.write("\r\n");
      out.write("\t        \t\t");
 if("thumbnail".equals(hf.getUse()) && hf.getBoardOriginalFileName()!=null){ 
      out.write("\r\n");
      out.write("\t        \t\t\t<img src=\"");
      out.print(request.getContextPath() );
      out.write("/upload/hospital/");
      out.print(hf.getBoardRenamedFileName() );
      out.write("\" alt=\"\">\r\n");
      out.write("\t\t        \t");
 } else if("thumbnail".equals(hf.getUse()) && hf.getBoardOriginalFileName()==null){ 
      out.write("\r\n");
      out.write("\t\t        \t\t<p style=\"font-size: 26px; margin-top: 100px; font-weight: 800; color: white;position: relative; z-index: 1;\">메인 이미지를 등록해주세요.</p>\r\n");
      out.write("\t        \t\t");
 } 
      out.write("\r\n");
      out.write("        \t\t");
 } 
      out.write("\r\n");
      out.write("\t        </div>\r\n");
      out.write("            <div class=\"opa-back\"></div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        <h1 class=\"title\"><span>●</span>");
      out.print( h.getHospName() );
      out.write(" 의사수정하기</h1>\r\n");
      out.write("        <a href=\"");
      out.print(request.getContextPath());
      out.write("/hospital/doctorRegister?hospId=");
      out.print( h.getHospId() );
      out.write("\" class=\"add-doc\">\r\n");
      out.write("        \t의사등록\r\n");
      out.write("        </a>\r\n");
      out.write("\t    ");
if(list == null || list.isEmpty()) {
      out.write("\r\n");
      out.write("\t    \t<h1>조회된 의사가 없습니다.</h1>   \r\n");
      out.write("        ");
 }else {
        		for(HospDoctor hd : list) {
        			if(hd.getDoctorNo().equals(editHd.getDoctorNo())) {
        
      out.write("\r\n");
      out.write("\t\t\t\t    <form action=\"");
      out.print( request.getContextPath() );
      out.write("/hospital/doctorEdit\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("\t\t\t\t        <div class=\"bk-main-wrap\">\r\n");
      out.write("\t\t\t\t            <div class=\"doc-wrap\">\r\n");
      out.write("\t\t\t\t            \t<p style=\"color: red; font-size: 12px;\">*표시 항목은 필수 항목입니다.</p>\r\n");
      out.write("\t\t\t\t            \t");
if(!hfList.isEmpty()) { 
									for(HospFile hf : hfList) {
										if(hf.getDoctorNo()!=null && hf.getDoctorNo().equals(editHd.getDoctorNo())) {
											if(hf.getBoardOriginalFileName()!=null) {
				            				
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t            \t<div class=\"doc-img\">\r\n");
      out.write("\t\t\t\t\t\t\t            \t\t<!-- 사진있을때 -->\r\n");
      out.write("\t\t\t\t\t\t\t                    <img alt=\"의사이미지\" src=\"");
      out.print(request.getContextPath() );
      out.write("/upload/hospital/");
      out.print(hf.getBoardRenamedFileName() );
      out.write("\" width=\"200px\"><br />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"file\" name=\"upfile\" width=\"100px\"/><br />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"delFile\" id=\"delFile\" value=\"사진삭제\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<label for=\"delFile\">사진삭제</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"oldOriginalFileName\" value = \"");
      out.print(hf.getBoardOriginalFileName()!= null ? hf.getBoardOriginalFileName():"");
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"oldRenamedFileName\" value = \"");
      out.print(hf.getBoardRenamedFileName()!= null ? hf.getBoardRenamedFileName():"");
      out.write("\" />\r\n");
      out.write("\t\t\t\t\t\t\t                </div>\r\n");
      out.write("\t\t\t\t\t\t\t                ");
 }else { //사진없을때
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t                <div class=\"doc-img\">\r\n");
      out.write("\t\t\t\t\t\t\t                \t<input type=\"file\" name=\"upfile\"/>\r\n");
      out.write("\t\t\t\t\t\t\t                </div>\r\n");
      out.write("\t\t\t\t                ");
 			}
				               		 	} else if(hf.getBoardRenamedFileName() == null) { 
      out.write("\r\n");
      out.write("\t\t\t\t               \t\t \t");
      out.write("\r\n");
      out.write("\t\t\t\t                \t\t\r\n");
      out.write("\t\t\t\t                ");
 		}
									}
				                } else { 
      out.write("\r\n");
      out.write("\t\t\t\t            \t<div class=\"doc-img\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"file\" name=\"upfile\"/>\r\n");
      out.write("\t\t\t\t                </div>\r\n");
      out.write("\t\t\t\t                ");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t                <div class=\"doc-info\">\r\n");
      out.write("\t\t\t\t                \t<input type=\"hidden\" id=\"hospId\" name=\"hospId\" value=\"");
      out.print( editHd.getHospId() );
      out.write("\" class=\"user-input\"/>\r\n");
      out.write("\t\t\t\t                \t<label for=\"doctorNo\" class=\"text-label\">의사번호</label>\r\n");
      out.write("\t\t\t\t                \t<input type=\"text\" id=\"doctorNo\" name=\"doctorNo\" value=\"");
      out.print( editHd.getDoctorNo() );
      out.write("\" class=\"user-input\" readonly/><br />\r\n");
      out.write("\t\t\t\t                \t<label for=\"doctorName\" class=\"text-label\">의사이름<span style=\"color:red;\">*</span></label>\r\n");
      out.write("\t\t\t\t                \t<input type=\"text\" id=\"doctorName\" name=\"doctorName\" value=\"");
      out.print( editHd.getDoctorName() );
      out.write("\" class=\"user-input\"/><br />\r\n");
      out.write("\t\t\t\t                \t<label class=\"text-label\">진료과<span style=\"color:red;\">*</span></label>\r\n");
      out.write("\t\t\t\t\t                    <select name=\"hospDept\" id=\"hospDept\">\r\n");
      out.write("\t\t\t\t\t                    \t<option value=\"\" ");
      out.print( editHd.getHospDept()==null ? "selected":"");
      out.write(">없음</option>\r\n");
      out.write("\t\t\t\t\t\t\t        \t\t<option value=\"내과\" ");
      out.print( "내과".equals(editHd.getHospDept()) ? "selected":"");
      out.write(">내과</option>\r\n");
      out.write("\t\t\t\t\t\t\t        \t\t<option value=\"외과\" ");
      out.print( "외과".equals(editHd.getHospDept()) ? "selected":"");
      out.write(">외과</option>\r\n");
      out.write("\t\t\t\t\t\t\t        \t\t<option value=\"안과\" ");
      out.print( "안과".equals(editHd.getHospDept()) ? "selected":"");
      out.write(">안과</option>\r\n");
      out.write("\t\t\t\t\t\t\t        \t\t<option value=\"치과\" ");
      out.print( "치과".equals(editHd.getHospDept()) ? "selected":"");
      out.write(">치과</option>\r\n");
      out.write("\t\t\t\t\t\t\t        \t\t<option value=\"피부과\" ");
      out.print( "피부과".equals(editHd.getHospDept()) ? "selected":"");
      out.write(">피부과</option>\r\n");
      out.write("\t\t\t\t\t\t\t        \t\t<option value=\"정신과\" ");
      out.print( "정신과".equals(editHd.getHospDept()) ? "selected":"");
      out.write(">정신과</option>\r\n");
      out.write("\t\t\t\t\t\t\t\t        </select><br />\r\n");
      out.write("\t\t\t\t                \t<label for=\"doctorTreat\" class=\"text-label\">진료내용</label>\r\n");
      out.write("\t\t\t\t                \t<input type=\"text\" id=\"doctorTreat\" name=\"doctorTreat\" class=\"user-input\" value=\"");
      out.print( editHd.getDoctorTreat()==null ? "":editHd.getDoctorTreat() );
      out.write("\"/><br />\r\n");
      out.write("\t\t\t\t                \t<label for=\"doctorSpec\" class=\"text-label\">학력/전공</label>\r\n");
      out.write("\t\t\t\t                \t<input type=\"text\" id=\"doctorSpec\" name=\"doctorSpec\" class=\"user-input\" value=\"");
      out.print( editHd.getDoctorSpec()==null ? "":editHd.getDoctorSpec() );
      out.write("\"/><br />\t\r\n");
      out.write("\t\t\t\t                \t<input type=\"submit\" value=\"수정하기\" class=\"submit-btn\"/><br />\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t<!-- 수정할 의사가 아닐 때 -->\r\n");
      out.write("                \t");
} else { 
      out.write("\r\n");
      out.write("\t\t\t\t         <div class=\"bk-main-wrap\">\r\n");
      out.write("\t\t\t\t         \t<div class=\"doc-wrap\">\r\n");
      out.write("                \t ");
 if(!hfList.isEmpty()) { 
                		for(HospFile fl : hfList) {
 		            		if(fl.getDoctorNo() != null) {
                				if((fl.getDoctorNo()).equals(hd.getDoctorNo())) { 
                					if(fl.getBoardOriginalFileName()!=null) {//사진있을때
      out.write("\r\n");
      out.write("\t\t\t\t\t                <div class=\"doc-img\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<img alt=\"의사이미지\" src=\"");
      out.print(request.getContextPath() );
      out.write("/upload/hospital/");
      out.print(fl.getBoardRenamedFileName() );
      out.write("\" width=\"200px\">\r\n");
      out.write("                \t\t\t\t\t</div>\r\n");
      out.write("                \t\t\t\t\t");
} else { //사진없을때 : 기본이미지
      out.write("\r\n");
      out.write("\t\t\t\t\t                <div class=\"doc-img\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<img alt=\"의사이미지\" src=\"");
      out.print(request.getContextPath() );
      out.write("/img/doctor.png\" width=\"200px\">\r\n");
      out.write("                \t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t");
 					}
								}	
							}
                		}
                	}
      out.write("\r\n");
      out.write("\t\t\t\t            ");
      out.write("\r\n");
      out.write("\t\t\t\t                <div class=\"doc-info\">\r\n");
      out.write("\t\t\t\t                    <h1>");
      out.print( hd.getDoctorName() );
      out.write("님</h1>\r\n");
      out.write("\t\t\t\t                    <p> - 의사번호 : ");
      out.print( hd.getDoctorNo() );
      out.write("</p>\r\n");
      out.write("\t\t\t\t                    <p> - 진료과 : ");
      out.print( hd.getHospDept() );
      out.write("</p>\r\n");
      out.write("\t\t\t\t                    <p> - 진료내용 : ");
      out.print( hd.getDoctorTreat()==null ? "":hd.getDoctorTreat());
      out.write("</p>\r\n");
      out.write("\t\t\t\t                    <p> - 학력/전공 :");
      out.print( hd.getDoctorSpec()==null ? "":hd.getDoctorSpec());
      out.write("</p>\r\n");
      out.write("\t\t\t\t                </div>\r\n");
      out.write("\t\t\t\t            </div>\r\n");
      out.write("       \t\t\t\t\t</div>\r\n");
      out.write("\t\t");
			}
        		}
        	}
      out.write("\r\n");
      out.write("<div id='pageBar' style=\"color:black;\">\r\n");
      out.write("\t\t");
      out.print( pageBar );
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</section>\r\n");
      out.write("<script>\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("\tvar fileTarget = $('.filebox .upload-hidden'); \r\n");
      out.write("\tfileTarget.on('change', function(){\r\n");
      out.write("\t\t// 값이 변경되면 \r\n");
      out.write("\t\tif(window.FileReader){ // modern browser \r\n");
      out.write("\t\t\tvar filename = $(this)[0].files[0].name; } \r\n");
      out.write("\t\telse { // old IE \r\n");
      out.write("\t\t\tvar filename = $(this).val().split('/').pop().split('\\\\').pop(); // 파일명만 추출 \r\n");
      out.write("\t\t\t} \r\n");
      out.write("\t\t// 추출한 파일명 삽입 \r\n");
      out.write("\t\t$(this).siblings('.upload-name1').val(filename);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("var imgTarget = $('.up_Image .upload-hidden');\r\n");
      out.write("imgTarget.on('change', function(){ \r\n");
      out.write("\tvar parent = $(this).parent(); \r\n");
      out.write("\tparent.children('.upload_display').remove(); \r\n");
      out.write("\tif(window.FileReader){ //image 파일만 \r\n");
      out.write("\t\tif (!$(this)[0].files[0].type.match(/image\\//)) return;\r\n");
      out.write("\tvar reader = new FileReader(); \r\n");
      out.write("\treader.onload = function(e){ \r\n");
      out.write("\t\tvar src = e.target.result; \r\n");
      out.write("\t\tparent.prepend('<div class=\"upload_display\"><div class=\"upload_wrap\"><img src=\"'+src+'\"></div></div>'); \r\n");
      out.write("\t\t} \r\n");
      out.write("\t\treader.readAsDataURL($(this)[0].files[0]); \r\n");
      out.write("\t} \r\n");
      out.write("\telse { \r\n");
      out.write("\t\t$(this)[0].select(); \r\n");
      out.write("\t\t$(this)[0].blur(); \r\n");
      out.write("\t\tvar imgSrc = document.selection.createRange().text; \r\n");
      out.write("\t\tparent.prepend('<div class=\"upload_display\"><div class=\"upload_wrap\"><img ></div></div>'); \r\n");
      out.write("\t\tvar img = $(this).siblings('.upload_display').find('img'); \r\n");
      out.write("\t\timg[0].style.filter = \"progid:DXImageTransform.Microsoft.AlphaImageLoader(enable='true',sizingMethod='scale',src=\\\"\"+imgSrc+\"\\\")\"; \r\n");
      out.write("\t} \r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\t<footer>\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li>\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/docs/policy\">이용약관</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li>\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/docs/privacy\">개인정보처리방침</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li>\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/docs/biz\">사업자정보확인</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li>\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/bbc/cs\">고객센터</a>\r\n");
      out.write("            </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("        <p>\r\n");
      out.write("            상호 : (주)씨닥 | 대표 : 씨닥 | 개인정보관리책임자 : KH | 전화 : 2588-2588 | 이메일 : khm0627@naver.com\r\n");
      out.write("            <Br />주소 : 서울특별시 강남구 역삼동 | 사업자등록번호 : 110-426-375674 | 통신판매 : 제 2020-서울강남-0922호 | 호스팅제공자 : (주)씨닥\r\n");
      out.write("            <br><br>\r\n");
      out.write("            Copyrighter ⓒ 2020 SeeDoc KH-m\r\n");
      out.write("        </p>\r\n");
      out.write("    </footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
