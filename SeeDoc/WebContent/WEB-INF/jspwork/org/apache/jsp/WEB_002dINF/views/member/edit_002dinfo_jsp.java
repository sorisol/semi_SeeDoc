/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-07-20 10:56:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.model.vo.User;
import member.model.service.MemberService;
import member.model.vo.User;
import hospital.model.vo.Hospital;

public final class edit_002dinfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/views/common/header.jsp", Long.valueOf(1595158624000L));
    _jspx_dependants.put("/WEB-INF/views/common/footer.jsp", Long.valueOf(1595220082000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.service.MemberService");
    _jspx_imports_classes.add("member.model.vo.User");
    _jspx_imports_classes.add("hospital.model.vo.Hospital");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	User userLoggedIn = (User)session.getAttribute("userLoggedIn");
	Cookie[] cookies2 = request.getCookies();
	boolean saveUserIdChecked = false;
	String saveUserIdValue = "";
	if(cookies2 != null) {
		for(Cookie c : cookies2) {
			String k = c.getName();
			String v = c.getValue();

			if("saveUserId".equals(k)) {
				saveUserIdChecked = true;
				saveUserIdValue = v;
			}
		}
	}
	
	
	
	Hospital hospLoggedIn = (Hospital)session.getAttribute("hospLoggedIn");
	//쿠키관련
	Cookie[] cookies = request.getCookies();
	boolean saveHospIdChecked = false;
	String saveHospIdValue = "";
	if(cookies != null) {
		for(Cookie c : cookies) {
			String k = c.getName();
			String v = c.getValue();

			if("saveHospId".equals(k)) {
				saveHospIdChecked = true;
				saveHospIdValue = v;
			}
		}
	}

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>See Doctor</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/header.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/footer.css\" />\r\n");
      out.write("<script src=\"");
      out.print( request.getContextPath() );
      out.write("/js/jquery-3.5.1.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"top-bar\">\r\n");
      out.write("        <header>\r\n");
      out.write("            <div class=\"logo\">\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath() );
      out.write("\"><img src=\"");
      out.print(request.getContextPath() );
      out.write("/img/logo.png\" alt=\"\"></a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <nav>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("                <ul>\r\n");
      out.write("                ");
if(hospLoggedIn == null && userLoggedIn == null) { 
      out.write("\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath() );
      out.write("\">\r\n");
      out.write("                        <li style=\"color:white\">홈</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/member/login\">\r\n");
      out.write("                        <li>로그인</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/member/register\">\r\n");
      out.write("                        <li>회원가입</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    \r\n");
      out.write("                ");
 } else if(hospLoggedIn != null) { 
      out.write("\r\n");
      out.write("                \t<a href=\"");
      out.print(request.getContextPath());
      out.write("/hospital/hospital?hospId=");
      out.print( hospLoggedIn.getHospId() );
      out.write("\"><span class=\"login1\"><strong>");
      out.print( hospLoggedIn.getHospName() );
      out.write("</strong></span></a>\r\n");
      out.write("                \t<a href=\"");
      out.print(request.getContextPath());
      out.write("/hospital/logout\">\r\n");
      out.write("                \t\t<li>로그아웃</li>\r\n");
      out.write("                \t</a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/hospital/edit-info?hospId=");
      out.print( hospLoggedIn.getHospId() );
      out.write("\">\r\n");
      out.write("                        <li>병원정보수정</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/hospital/doctorList?hospId=");
      out.print( hospLoggedIn.getHospId() );
      out.write("\">\r\n");
      out.write("                        <li>의사보기</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <!-- 2/15 -->\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/booking/bookingHopitalList?hospId=");
      out.print( hospLoggedIn.getHospId() );
      out.write("\"> <!-- ts -->\r\n");
      out.write("                        <li>예약내역(병원)</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                 ");
}else if(userLoggedIn!=null&&userLoggedIn.getUserRole().equals(MemberService.MEMBER_ROLE_ADMIN)){ 
      out.write("   \r\n");
      out.write("                    <span class=\"login1\"><strong>");
      out.print( userLoggedIn.getUserName());
      out.write("</strong></span>\r\n");
      out.write("                \t<a href=\"");
      out.print(request.getContextPath());
      out.write("/member/logout\">\r\n");
      out.write("                \t\t<li>로그아웃</li>\r\n");
      out.write("                \t</a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/admin/memberList\">\r\n");
      out.write("                        <li>회원조회</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/admin/hospList\">\r\n");
      out.write("                        <li>병원조회</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    \r\n");
      out.write("                ");
 } else { 
      out.write("\r\n");
      out.write("                \t<span class=\"login1\"><strong>");
      out.print( userLoggedIn.getUserName());
      out.write("</strong></span>\r\n");
      out.write("                \t<a href=\"");
      out.print(request.getContextPath());
      out.write("/member/logout\">\r\n");
      out.write("                \t\t<li>로그아웃</li>\r\n");
      out.write("                \t</a>\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/member/edit-info?userId=");
      out.print( userLoggedIn.getUserId());
      out.write("\">\r\n");
      out.write("                        <li>회원정보수정</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                    <!-- 2/15 -->\r\n");
      out.write("                    <a href=\"");
      out.print(request.getContextPath());
      out.write("/booking/bookinglist?userId=");
      out.print( userLoggedIn.getUserId() );
      out.write("\"> <!-- ts -->\r\n");
      out.write("                        <li>예약내역</li>\r\n");
      out.write("                    </a>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("                </ul>\r\n");
      out.write("            </nav>\r\n");
      out.write("        </header>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"sub-bar\"></div>\r\n");
      out.write("\r\n");
      out.write("\r\n");


	User u = (User)request.getAttribute("user");

	System.out.println(u);
	String userSymptom = u.getUserSymptom()!=null?u.getUserSymptom():"";
	
	String birth = null;
	if("1".equals(u.getUserBirth().substring(7)) || "2".equals(u.getUserBirth().substring(7))){
		birth = "19"+ u.getUserBirth().substring(0, 6);
	} else {
		birth = "20"+ u.getUserBirth().substring(0, 6);
	}
	
	birth = birth.substring(0,4) + "-" + birth.substring(4,6) + "-" + birth.substring(6);

	String userEmailDirect = u.getUserEmail().substring(u.getUserEmail().lastIndexOf("@"));


      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/member-edit-info.css\">\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("$(function () {\r\n");
      out.write("\t$(\"#email\").css('width','5px');\r\n");
      out.write("\t$(\"#email\").change(function () {\r\n");
      out.write("\t\tvar emailText = $(\"#email option:selected\").text();\r\n");
      out.write("\t\tif(emailText==\"직접입력\"){\r\n");
      out.write("\t\t\t$(\"#email\").css('width','5px');\r\n");
      out.write("\t\t\t$(\"#emailDirect\").show();\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$(\"#email\").css('width','184px');\r\n");
      out.write("\t\t\t$(\"#emailDirect\").hide();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#userPwdCheck\").keyup(function () {\r\n");
      out.write("\t\tlet $pwd1 = $(\"#userPwd\");\r\n");
      out.write("\t\tlet $pwd2 = $(\"#userPwdCheck\");\r\n");
      out.write("\t    \r\n");
      out.write("\t    if($pwd1.val() == $pwd2.val()){\r\n");
      out.write("\t        $('#p-pwdCheck').css('opacity', '0');\r\n");
      out.write("\t        return true;\r\n");
      out.write("\t    }\r\n");
      out.write("\t    else{\r\n");
      out.write("\t        $('#p-pwdCheck').css('opacity', '1');\r\n");
      out.write("\t        return false;\r\n");
      out.write("\t    }\r\n");
      out.write("\t});\r\n");
      out.write("\t$(\"[name=memberUpdateFrm]\").submit(function() {\r\n");
      out.write("\t\t/* var newdate = new Date(); */\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* if($(\"#userBirth\") == newdate){\r\n");
      out.write("\t\t\talert(\"생년월일을 적어주세요.\");\r\n");
      out.write("\t\t\treturn false;\t\t\t\r\n");
      out.write("\t\t} */\r\n");
      out.write("\t\t/* if($(\"input:radio[name=userGender]:checked\").val() == 'M'){\r\n");
      out.write("\t\t\tvar result = confirm(\"남자가 맞습니까?\");\r\n");
      out.write("\t\t\tif(result){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t} */\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function openPopup1() {\r\n");
      out.write("\t//팝업생성\r\n");
      out.write("\tlet url = \"");
      out.print( request.getContextPath());
      out.write("/jusoPopup1\";\r\n");
      out.write("\tlet title = \"jusoPopup\";\r\n");
      out.write("\tlet spec = \"width=600px, height=500px\";\r\n");
      out.write("\topen(url, title, spec);\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function jusoCallBack1(roadFullAddr,roadAddrPart1,addrDetail,roadAddrPart2,engAddr, jibunAddr, zipNo, admCd, rnMgtSn, bdMgtSn,detBdNmList,bdNm,bdKdcd,siNm,sggNm,emdNm,liNm,rn,udrtYn,buldMnnm,buldSlno,mtYn,lnbrMnnm,lnbrSlno,emdNo){\r\n");
      out.write("\t$(\"#memberAddr2\").val(roadFullAddr); // 도로명주소\r\n");
      out.write("self.close();\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("function deleteMember() {\r\n");
      out.write("\tif(!confirm(\"정말 탈퇴하시겠습니까?\")) return;\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"[name=deleteMemberFrm]\").submit();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<section>\r\n");
      out.write("        <article>\r\n");
      out.write("            <div class=\"register\">\r\n");
      out.write("                <h1 id=\"title\">회원 정보 수정</h1>\r\n");
      out.write("                <div class=\"member\">\r\n");
      out.write("\t                <form name=\"memberUpdateFrm\" action=\"");
      out.print(request.getContextPath());
      out.write("/member/memberUpdate\" method=\"post\" >\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" class=\"user-input check-input\" name=\"userId\" id=\"userId\" value=\"");
      out.print(u.getUserId());
      out.write("\" readonly>\r\n");
      out.write("\t                    <label class=\"text-label\">비밀번호<span>*</span></label>\r\n");
      out.write("\t                    <input type=\"password\" class=\"user-input\" name=\"userPwd\" id=\"userPwd\" placeholder=\"4자이상\" required>\r\n");
      out.write("\t                    <input type=\"password\" placeholder=\"비밀번호 확인\" class=\"user-input\" name=\"userPwdCheck\" id=\"userPwdCheck\"  required>\r\n");
      out.write("\t                    <p id=\"p-pwdCheck\">비밀번호가 일치하지 않습니다.</p>\r\n");
      out.write("\t\r\n");
      out.write("\t                    <label class=\"text-label\">이름 (실명 입력)<span>*</span></label>\r\n");
      out.write("\t                    <input type=\"text\" class=\"user-input\" name=\"userName\" value=\"");
      out.print(u.getUserName());
      out.write("\" required>\r\n");
      out.write("\t\r\n");
      out.write("\t                    <label class=\"text-label\">이메일<span>*</span></label>\r\n");
      out.write("\t                    <input type=\"text\" class=\"user-input check-input2\" name=\"userEmail\" placeholder=\"qwerty\" \r\n");
      out.write("\t                    ");
String email = u.getUserEmail();
	                    	int s = email.indexOf("@");
	                    	String email_id = email.substring(0, s);
	                    	String email_domain = email.substring(s+1);
	                    
      out.write("\r\n");
      out.write("\t                    value=\"");
      out.print(email_id);
      out.write("\" required>\r\n");
      out.write("\t\t\t\t\t    <select name=\"userEmail2\" id=\"email\" class=\"user-input check-input3\"");
      out.write(" required>\r\n");
      out.write("\t\t\t\t\t        <option value=\"\">선택하시오.</option>\r\n");
      out.write("\t\t\t\t\t        <option value=\"@naver.com\" ");
      out.print( u.getUserEmail()!=null && u.getUserEmail().contains("@naver") ? "selected":"" );
      out.write(">@naver.com</option>\r\n");
      out.write("\t\t\t\t\t        <option value=\"@gmail.com\" ");
      out.print( u.getUserEmail()!=null && u.getUserEmail().contains("@gmail") ? "selected":"" );
      out.write(">@gmail.com</option>\r\n");
      out.write("\t\t\t\t\t        <option value=\"@yahoo.co.kr\" ");
      out.print( u.getUserEmail()!=null && u.getUserEmail().contains("@yahoo") ? "selected":"" );
      out.write(">@yahoo.co.kr</option>\r\n");
      out.write("\t\t\t\t\t        <option value=\"@nate.com\" ");
      out.print( u.getUserEmail()!=null && u.getUserEmail().contains("@nate") ? "selected":"" );
      out.write(">@nate.com</option>\r\n");
      out.write("\t\t\t\t\t        <option value=\"@hanmail.net\" ");
      out.print( u.getUserEmail()!=null && u.getUserEmail().contains("@hanmail") ? "selected":"" );
      out.write(">@hanmail.net</option>\r\n");
      out.write("\t\t\t\t\t        <option value=\"1\"  ");
      out.print( u.getUserEmail()!=null && !(u.getUserEmail().contains("@naver"))&& !(u.getUserEmail().contains("@gmail"))&& !(u.getUserEmail().contains("@yahoo"))&& !(u.getUserEmail().contains("@nate"))&& !(u.getUserEmail().contains("@hanmail")) ? "selected":""  );
      out.write(">직접입력</option>\r\n");
      out.write("\t\t\t\t\t    </select>\r\n");
      out.write("\t                    <input type=\"text\" name=\"emailDirect\" id=\"emailDirect\" class=\"user-input check-input4\" placeholder=\"@aaaa.com\" value=\"");
      out.print(userEmailDirect);
      out.write("\" style=\"width: 145px\" />\r\n");
      out.write("\t                    \r\n");
      out.write("\t                    \r\n");
      out.write("\t                    <label class=\"text-label\" style=\"clear: both;\">휴대전화번호<span>*</span></label>\r\n");
      out.write("\t                    <input type=\"text\" class=\"user-input\" name=\"userPhone\" placeholder=\"'-'를 제외하고적으시오\" value=\"");
      out.print(u.getUserPhone() );
      out.write("\" required>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<div style=\"width: 60%; float: left;\">\r\n");
      out.write("\t\t                    <label class=\"text-label\" style=\"width: 80%\">생년월일<span>*</span></label>\r\n");
      out.write("\t\t                    <input type=\"date\" class=\"user-input check-input1\" id=\"\" name=\"userBirth\" value=\"");
      out.print(birth);
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t                    \r\n");
      out.write("\t                    <div class=\"gender-Check\">\r\n");
      out.write("\t\t                    <label class=\"text-label\">성별<span>*</span></label>\r\n");
      out.write("\t\t                    <div style=\"margin-top: 15px\">\r\n");
      out.write("\t\t\t                    <input type=\"radio\" name=\"userGender\" value=\"M\" id=\"userGender\" ");
      out.print("M".equals(u.getUserGender())?"checked":"" );
      out.write(">\r\n");
      out.write("\t\t\t                    <label class=\"reg-label\" for=\"male\">남성</label>\r\n");
      out.write("\t\t\t                    <input type=\"radio\" name=\"userGender\" value=\"F\" id=\"userGender\" ");
      out.print("F".equals(u.getUserGender())?"checked":"" );
      out.write(">\r\n");
      out.write("\t\t\t                    <label class=\"reg-label\" for=\"female\">여성</label>\r\n");
      out.write("\t\t                    </div>\r\n");
      out.write("\t                    </div>\r\n");
      out.write("\t                    <label class=\"text-label\" style=\"clear: both;\">주소</label>\r\n");
      out.write("\t                    <input type=\"text\" class=\"user-input check-input\" placeholder=\"우편번호 주소\" name=\"userAddr\" id=\"memberAddr2\" \r\n");
      out.write("\t                    value=\"");
      out.print(u.getUserAddr()!=null?u.getUserAddr():"");
      out.write("\">\r\n");
      out.write("\t                    <div class=\"check-btn1\" onclick=\"openPopup1();\">우편번호 검색</div>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<label class=\"text-label\">주요 증상</label>\r\n");
      out.write("\t                    <textarea name=\"userSymptom\" id=\"userSymptom\" class=\"user-input\" cols=\"30\" rows=\"30\" style=\"padding:9px 9px; resize: none; height: 100px;\" placeholder=\"많이 아픈걸 적으시오\">");
      out.print(userSymptom);
      out.write("</textarea>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<input type=\"submit\" value=\"정보수정\" class=\"submit-btn\"/>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"button\" value=\"탈퇴\" class=\"submit-btn\" onclick=\"deleteMember();\"/>\r\n");
      out.write("\t                </form>\r\n");
      out.write("                   </div>\r\n");
      out.write("              </div>\r\n");
      out.write("        </article>\r\n");
      out.write("    </section>\r\n");
      out.write("     <form action=\"");
      out.print(request.getContextPath() );
      out.write("/member/deleteMember\" name=\"deleteMemberFrm\" method=\"POST\">\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"userId\" value=\"");
      out.print(u.getUserId());
      out.write("\" />\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\r\n");
      out.write("\t<footer>\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li>\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/docs/policy\">이용약관</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li>\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/docs/privacy\">개인정보처리방침</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li>\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/docs/biz\">사업자정보확인</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li>\r\n");
      out.write("                <a href=\"");
      out.print(request.getContextPath());
      out.write("/bbc/cs\">고객센터</a>\r\n");
      out.write("            </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("        <p>\r\n");
      out.write("            상호 : (주)씨닥 | 대표 : 씨닥 | 개인정보관리책임자 : KH | 전화 : 2588-2588 | 이메일 : khm0627@naver.com\r\n");
      out.write("            <Br />주소 : 서울특별시 강남구 역삼동 | 사업자등록번호 : 110-426-375674 | 통신판매 : 제 2020-서울강남-0922호 | 호스팅제공자 : (주)씨닥\r\n");
      out.write("            <br><br>\r\n");
      out.write("            Copyrighter ⓒ 2020 SeeDoc KH-m\r\n");
      out.write("        </p>\r\n");
      out.write("    </footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
